<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CrypConnect</name>
    </assembly>
    <members>
        <member name="P:CryptoExchanges.Coin.bitcoin">
            <summary>
            Reference to Bitcoin, for convenience.
            </summary>
        </member>
        <member name="P:CryptoExchanges.Coin.ethereum">
            <summary>
            Reference to Ethereum, for convenience.
            </summary>
        </member>
        <member name="P:CryptoExchanges.Coin.usd">
            <summary>
            Reference to United States Dollar, for convenience.
            </summary>
        </member>
        <member name="E:CryptoExchanges.Coin.onPriceUpdate">
            <summary>
            Called when prices refresh on any TradingPair for this Coin.
            </summary>
        </member>
        <member name="E:CryptoExchanges.Coin.onStatusUpdate">
            <summary>
            Called when a TradingPair for this Coin has a status change.
            </summary>
        </member>
        <member name="F:CryptoExchanges.Coin.fullNameLower">
            <summary>
            Cached in this form for performance.
            </summary>
        </member>
        <member name="M:CryptoExchanges.Coin.Best(CryptoExchanges.Coin,System.Boolean,System.Nullable{CryptoExchanges.ExchangeName})">
            <summary>
            </summary>
            <param name="sellVsBuy">
            True: Sell this coin for baseCoin. False: Buy this coin with baseCoin.
            </param>
            <param name="baseCoinFullName"></param>
            <param name="exchangeName">
            If specified, only consider trades on this exchange
            </param>
            <returns></returns>
        </member>
        <member name="T:CryptoExchanges.CoinMarketCap.CoinMarketCapAPI">
            <summary>
            https://coinmarketcap.com/api/
            </summary>
        </member>
        <member name="M:CryptoExchanges.ExchangeMonitorConfig.#ctor(CryptoExchanges.ExchangeName[])">
            <summary>
            
            </summary>
            <param name="supportedExchangeList">
            List in priority order.  i.e. the first exchange will be considered before others.
            Leave blank to support every exchange.
            </param>
        </member>
        <member name="M:CryptoExchanges.ExchangeMonitorConfig.AddCoinMap(System.String[][])">
            <summary>
            Defines aliases for a coin.  
            e.g. TetherUS maps to Tether so it matches with other exchanges.
            </summary>
            <param name="coinFullNameMapList">
            The first string is the coin's full name we will use going forward.
            The other strings are aliases which will map to the first.
            </param>
        </member>
        <member name="M:CryptoExchanges.ExchangeMonitorConfig.BlacklistCoins(System.String[])">
            <summary>
            Completely removes these coins from consideration.
            To restore these entries, stop and restart the program.
            </summary>
        </member>
        <member name="T:CryptoExchanges.Exchanges.GDax.GDaxExchange">
            <remarks>
            https://docs.gdax.com/#introduction
            </remarks>
        </member>
        <member name="T:CryptoExchanges.Exchanges.KucoinExchange">
            <remarks>
            https://kucoinapidocs.docs.apiary.io/#
            </remarks>
        </member>
        <member name="M:CryptoExchanges.Exchanges.KucoinExchange.#ctor(CryptoExchanges.ExchangeMonitor)">
            <summary>
            No stated throttle limit, going with the same as Crytpopia
            </summary>
        </member>
        <member name="T:CryptoExchanges.EtherDeltaExchange">
            <summary>
            
            </summary>
            <remarks>
            https://github.com/etherdelta/etherdelta.github.io/blob/master/docs/API_OLD.md
            </remarks>
        </member>
        <member name="M:CryptoExchanges.EtherDeltaExchange.#ctor(CryptoExchanges.ExchangeMonitor)">
            <summary>
            No stated throttle limit, going with the same as Crytpopia
            </summary>
            <param name="exchangeMonitor"></param>
        </member>
        <member name="T:CryptoExchanges.BinanceExchange">
            <summary>
            </summary>
            <remarks>
            https://github.com/binance-exchange/binance-official-api-docs/blob/master/rest-api.md
            HTTP 429 return code is used when breaking a request rate limit.
            </remarks>
        </member>
        <member name="M:CryptoExchanges.BinanceExchange.#ctor(CryptoExchanges.ExchangeMonitor)">
            <summary>
            Throttle:
              1200 requests per minute is the stated max.
              Targeting half that to avoid issues.
            </summary>
        </member>
        <member name="T:CryptoExchanges.CryptopiaExchange">
            <remarks>
            https://www.cryptopia.co.nz/Forum/Thread/255
            </remarks>
        </member>
        <member name="M:CryptoExchanges.CryptopiaExchange.#ctor(CryptoExchanges.ExchangeMonitor)">
            <summary>
            1,000 requests/minute
            1,000,000 requests/day (smaller)
            (using half daily limit)
            </summary>
            <param name="exchangeMonitor"></param>
        </member>
        <member name="E:CryptoExchanges.Exchange.onPriceUpdate">
            <summary>
            Called each time the exchange's prices are updated.
            This is an alternative to each Coin's onPriceUpdate event.
            </summary>
        </member>
        <member name="P:CryptoExchanges.Exchange.supportsOverlappingBooks">
            <summary>
            True if the exchange allows a negative spread.
            </summary>
        </member>
        <member name="M:CryptoExchanges.Exchange.LoadTickerNames">
            <summary>
            This is called during init and then refreshed periodically.
            You can also call this anytime for a manual refresh (subject to throttling).
            It should call AddTicker for each coin.
            This may call UpdateTradingPair with status (unless that is done during GetAllTradingPairs)
            </summary>
        </member>
        <member name="M:CryptoExchanges.Exchange.GetAllTradingPairs">
            <summary>
            This is called during init, after LoadTickerNames and then refreshed periodically.
            Call AddTradingPair for each pair supported.
            </summary>
        </member>
        <member name="M:CryptoExchanges.Exchange.AddTicker(System.String,CryptoExchanges.Coin,System.Boolean)">
                ///  - Event when the coin status changes
             - Event when a new coin is detected
             TODO for other exchanges
        </member>
        <member name="F:CryptoExchanges.ExchangeMonitor.exchangeList">
            <summary>
            In priority order, so first exchange is my most preferred trading platform.
            </summary>
        </member>
        <member name="F:CryptoExchanges.ExchangeMonitor.aliasLowerToCoin">
            <summary>
            Populated from config on construction.
            </summary>
        </member>
        <member name="F:CryptoExchanges.ExchangeMonitor.blacklistedFullNameLowerList">
            <summary>
            Populated from config on construction.
            After consider aliases.
            </summary>
        </member>
        <member name="F:CryptoExchanges.ExchangeMonitor.fullNameLowerToCoin">
            <summary>
            After considering aliases and blacklist.
            </summary>
        </member>
        <member name="P:CryptoExchanges.TradingPair.askPrice">
            <summary>
            The cost to purchase.
            </summary>
        </member>
        <member name="P:CryptoExchanges.TradingPair.bidPrice">
            <summary>
            The price you would get by selling.
            </summary>
        </member>
    </members>
</doc>
